"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/suspend-react";
exports.ids = ["vendor-chunks/suspend-react"];
exports.modules = {

/***/ "(ssr)/../node_modules/suspend-react/index.js":
/*!**********************************************!*\
  !*** ../node_modules/suspend-react/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   peek: () => (/* binding */ peek),\n/* harmony export */   preload: () => (/* binding */ preload),\n/* harmony export */   suspend: () => (/* binding */ suspend)\n/* harmony export */ });\nconst isPromise = (promise)=>typeof promise === \"object\" && typeof promise.then === \"function\";\nconst globalCache = [];\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b)=>a === b) {\n    if (arrA === arrB) return true;\n    if (!arrA || !arrB) return false;\n    const len = arrA.length;\n    if (arrB.length !== len) return false;\n    for(let i = 0; i < len; i++)if (!equal(arrA[i], arrB[i])) return false;\n    return true;\n}\nfunction query(fn, keys = null, preload = false, config = {}) {\n    // If no keys were given, the function is the key\n    if (keys === null) keys = [\n        fn\n    ];\n    for (const entry of globalCache){\n        // Find a match\n        if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n            // If we're pre-loading and the element is present, just return\n            if (preload) return undefined; // If an error occurred, throw\n            if (Object.prototype.hasOwnProperty.call(entry, \"error\")) throw entry.error; // If a response was successful, return\n            if (Object.prototype.hasOwnProperty.call(entry, \"response\")) {\n                if (config.lifespan && config.lifespan > 0) {\n                    if (entry.timeout) clearTimeout(entry.timeout);\n                    entry.timeout = setTimeout(entry.remove, config.lifespan);\n                }\n                return entry.response;\n            } // If the promise is still unresolved, throw\n            if (!preload) throw entry.promise;\n        }\n    } // The request is new or has changed.\n    const entry = {\n        keys,\n        equal: config.equal,\n        remove: ()=>{\n            const index = globalCache.indexOf(entry);\n            if (index !== -1) globalCache.splice(index, 1);\n        },\n        promise: (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n        ).then((response)=>{\n            entry.response = response; // Remove the entry in time if a lifespan was given\n            if (config.lifespan && config.lifespan > 0) {\n                entry.timeout = setTimeout(entry.remove, config.lifespan);\n            }\n        }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n        .catch((error)=>entry.error = error)\n    }; // Register the entry\n    globalCache.push(entry); // And throw the promise, this yields control back to React\n    if (!preload) throw entry.promise;\n    return undefined;\n}\nconst suspend = (fn, keys, config)=>query(fn, keys, false, config);\nconst preload = (fn, keys, config)=>void query(fn, keys, true, config);\nconst peek = (keys)=>{\n    var _globalCache$find;\n    return (_globalCache$find = globalCache.find((entry)=>shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\nconst clear = (keys)=>{\n    if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);\n    else {\n        const entry = globalCache.find((entry)=>shallowEqualArrays(keys, entry.keys, entry.equal));\n        if (entry) entry.remove();\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3N1c3BlbmQtcmVhY3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLFlBQVlDLENBQUFBLFVBQVcsT0FBT0EsWUFBWSxZQUFZLE9BQU9BLFFBQVFDLElBQUksS0FBSztBQUVwRixNQUFNQyxjQUFjLEVBQUU7QUFFdEIsU0FBU0MsbUJBQW1CQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsUUFBUSxDQUFDQyxHQUFHQyxJQUFNRCxNQUFNQyxDQUFDO0lBQy9ELElBQUlKLFNBQVNDLE1BQU0sT0FBTztJQUMxQixJQUFJLENBQUNELFFBQVEsQ0FBQ0MsTUFBTSxPQUFPO0lBQzNCLE1BQU1JLE1BQU1MLEtBQUtNLE1BQU07SUFDdkIsSUFBSUwsS0FBS0ssTUFBTSxLQUFLRCxLQUFLLE9BQU87SUFFaEMsSUFBSyxJQUFJRSxJQUFJLEdBQUdBLElBQUlGLEtBQUtFLElBQUssSUFBSSxDQUFDTCxNQUFNRixJQUFJLENBQUNPLEVBQUUsRUFBRU4sSUFBSSxDQUFDTSxFQUFFLEdBQUcsT0FBTztJQUVuRSxPQUFPO0FBQ1Q7QUFFQSxTQUFTQyxNQUFNQyxFQUFFLEVBQUVDLE9BQU8sSUFBSSxFQUFFQyxVQUFVLEtBQUssRUFBRUMsU0FBUyxDQUFDLENBQUM7SUFDMUQsaURBQWlEO0lBQ2pELElBQUlGLFNBQVMsTUFBTUEsT0FBTztRQUFDRDtLQUFHO0lBRTlCLEtBQUssTUFBTUksU0FBU2YsWUFBYTtRQUMvQixlQUFlO1FBQ2YsSUFBSUMsbUJBQW1CVyxNQUFNRyxNQUFNSCxJQUFJLEVBQUVHLE1BQU1YLEtBQUssR0FBRztZQUNyRCwrREFBK0Q7WUFDL0QsSUFBSVMsU0FBUyxPQUFPRyxXQUFXLDhCQUE4QjtZQUU3RCxJQUFJQyxPQUFPQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDTCxPQUFPLFVBQVUsTUFBTUEsTUFBTU0sS0FBSyxFQUFFLHVDQUF1QztZQUVwSCxJQUFJSixPQUFPQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDTCxPQUFPLGFBQWE7Z0JBQzNELElBQUlELE9BQU9RLFFBQVEsSUFBSVIsT0FBT1EsUUFBUSxHQUFHLEdBQUc7b0JBQzFDLElBQUlQLE1BQU1RLE9BQU8sRUFBRUMsYUFBYVQsTUFBTVEsT0FBTztvQkFDN0NSLE1BQU1RLE9BQU8sR0FBR0UsV0FBV1YsTUFBTVcsTUFBTSxFQUFFWixPQUFPUSxRQUFRO2dCQUMxRDtnQkFFQSxPQUFPUCxNQUFNWSxRQUFRO1lBQ3ZCLEVBQUUsNENBQTRDO1lBRzlDLElBQUksQ0FBQ2QsU0FBUyxNQUFNRSxNQUFNakIsT0FBTztRQUNuQztJQUNGLEVBQUUscUNBQXFDO0lBR3ZDLE1BQU1pQixRQUFRO1FBQ1pIO1FBQ0FSLE9BQU9VLE9BQU9WLEtBQUs7UUFDbkJzQixRQUFRO1lBQ04sTUFBTUUsUUFBUTVCLFlBQVk2QixPQUFPLENBQUNkO1lBQ2xDLElBQUlhLFVBQVUsQ0FBQyxHQUFHNUIsWUFBWThCLE1BQU0sQ0FBQ0YsT0FBTztRQUM5QztRQUNBOUIsU0FDQSxDQUFDRCxVQUFVYyxNQUFNQSxLQUFLQSxNQUFNQyxNQUFNLG9DQUFvQztRQUF0QyxFQUM5QmIsSUFBSSxDQUFDNEIsQ0FBQUE7WUFDTFosTUFBTVksUUFBUSxHQUFHQSxVQUFVLG1EQUFtRDtZQUU5RSxJQUFJYixPQUFPUSxRQUFRLElBQUlSLE9BQU9RLFFBQVEsR0FBRyxHQUFHO2dCQUMxQ1AsTUFBTVEsT0FBTyxHQUFHRSxXQUFXVixNQUFNVyxNQUFNLEVBQUVaLE9BQU9RLFFBQVE7WUFDMUQ7UUFDRixHQUFHLDZGQUE2RjtTQUMvRlMsS0FBSyxDQUFDVixDQUFBQSxRQUFTTixNQUFNTSxLQUFLLEdBQUdBO0lBQ2hDLEdBQUcscUJBQXFCO0lBRXhCckIsWUFBWWdDLElBQUksQ0FBQ2pCLFFBQVEsMkRBQTJEO0lBRXBGLElBQUksQ0FBQ0YsU0FBUyxNQUFNRSxNQUFNakIsT0FBTztJQUNqQyxPQUFPa0I7QUFDVDtBQUVBLE1BQU1pQixVQUFVLENBQUN0QixJQUFJQyxNQUFNRSxTQUFXSixNQUFNQyxJQUFJQyxNQUFNLE9BQU9FO0FBRTdELE1BQU1ELFVBQVUsQ0FBQ0YsSUFBSUMsTUFBTUUsU0FBVyxLQUFLSixNQUFNQyxJQUFJQyxNQUFNLE1BQU1FO0FBRWpFLE1BQU1vQixPQUFPdEIsQ0FBQUE7SUFDWCxJQUFJdUI7SUFFSixPQUFPLENBQUNBLG9CQUFvQm5DLFlBQVlvQyxJQUFJLENBQUNyQixDQUFBQSxRQUFTZCxtQkFBbUJXLE1BQU1HLE1BQU1ILElBQUksRUFBRUcsTUFBTVgsS0FBSyxFQUFDLEtBQU0sT0FBTyxLQUFLLElBQUkrQixrQkFBa0JSLFFBQVE7QUFDeko7QUFFQSxNQUFNVSxRQUFRekIsQ0FBQUE7SUFDWixJQUFJQSxTQUFTSSxhQUFhSixLQUFLSixNQUFNLEtBQUssR0FBR1IsWUFBWThCLE1BQU0sQ0FBQyxHQUFHOUIsWUFBWVEsTUFBTTtTQUFPO1FBQzFGLE1BQU1PLFFBQVFmLFlBQVlvQyxJQUFJLENBQUNyQixDQUFBQSxRQUFTZCxtQkFBbUJXLE1BQU1HLE1BQU1ILElBQUksRUFBRUcsTUFBTVgsS0FBSztRQUN4RixJQUFJVyxPQUFPQSxNQUFNVyxNQUFNO0lBQ3pCO0FBQ0Y7QUFFeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3J0aWZvbGlvMjAyNC8uLi9ub2RlX21vZHVsZXMvc3VzcGVuZC1yZWFjdC9pbmRleC5qcz9iZDQ2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlzUHJvbWlzZSA9IHByb21pc2UgPT4gdHlwZW9mIHByb21pc2UgPT09ICdvYmplY3QnICYmIHR5cGVvZiBwcm9taXNlLnRoZW4gPT09ICdmdW5jdGlvbic7XG5cbmNvbnN0IGdsb2JhbENhY2hlID0gW107XG5cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbEFycmF5cyhhcnJBLCBhcnJCLCBlcXVhbCA9IChhLCBiKSA9PiBhID09PSBiKSB7XG4gIGlmIChhcnJBID09PSBhcnJCKSByZXR1cm4gdHJ1ZTtcbiAgaWYgKCFhcnJBIHx8ICFhcnJCKSByZXR1cm4gZmFsc2U7XG4gIGNvbnN0IGxlbiA9IGFyckEubGVuZ3RoO1xuICBpZiAoYXJyQi5sZW5ndGggIT09IGxlbikgcmV0dXJuIGZhbHNlO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIGlmICghZXF1YWwoYXJyQVtpXSwgYXJyQltpXSkpIHJldHVybiBmYWxzZTtcblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gcXVlcnkoZm4sIGtleXMgPSBudWxsLCBwcmVsb2FkID0gZmFsc2UsIGNvbmZpZyA9IHt9KSB7XG4gIC8vIElmIG5vIGtleXMgd2VyZSBnaXZlbiwgdGhlIGZ1bmN0aW9uIGlzIHRoZSBrZXlcbiAgaWYgKGtleXMgPT09IG51bGwpIGtleXMgPSBbZm5dO1xuXG4gIGZvciAoY29uc3QgZW50cnkgb2YgZ2xvYmFsQ2FjaGUpIHtcbiAgICAvLyBGaW5kIGEgbWF0Y2hcbiAgICBpZiAoc2hhbGxvd0VxdWFsQXJyYXlzKGtleXMsIGVudHJ5LmtleXMsIGVudHJ5LmVxdWFsKSkge1xuICAgICAgLy8gSWYgd2UncmUgcHJlLWxvYWRpbmcgYW5kIHRoZSBlbGVtZW50IGlzIHByZXNlbnQsIGp1c3QgcmV0dXJuXG4gICAgICBpZiAocHJlbG9hZCkgcmV0dXJuIHVuZGVmaW5lZDsgLy8gSWYgYW4gZXJyb3Igb2NjdXJyZWQsIHRocm93XG5cbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZW50cnksICdlcnJvcicpKSB0aHJvdyBlbnRyeS5lcnJvcjsgLy8gSWYgYSByZXNwb25zZSB3YXMgc3VjY2Vzc2Z1bCwgcmV0dXJuXG5cbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZW50cnksICdyZXNwb25zZScpKSB7XG4gICAgICAgIGlmIChjb25maWcubGlmZXNwYW4gJiYgY29uZmlnLmxpZmVzcGFuID4gMCkge1xuICAgICAgICAgIGlmIChlbnRyeS50aW1lb3V0KSBjbGVhclRpbWVvdXQoZW50cnkudGltZW91dCk7XG4gICAgICAgICAgZW50cnkudGltZW91dCA9IHNldFRpbWVvdXQoZW50cnkucmVtb3ZlLCBjb25maWcubGlmZXNwYW4pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGVudHJ5LnJlc3BvbnNlO1xuICAgICAgfSAvLyBJZiB0aGUgcHJvbWlzZSBpcyBzdGlsbCB1bnJlc29sdmVkLCB0aHJvd1xuXG5cbiAgICAgIGlmICghcHJlbG9hZCkgdGhyb3cgZW50cnkucHJvbWlzZTtcbiAgICB9XG4gIH0gLy8gVGhlIHJlcXVlc3QgaXMgbmV3IG9yIGhhcyBjaGFuZ2VkLlxuXG5cbiAgY29uc3QgZW50cnkgPSB7XG4gICAga2V5cyxcbiAgICBlcXVhbDogY29uZmlnLmVxdWFsLFxuICAgIHJlbW92ZTogKCkgPT4ge1xuICAgICAgY29uc3QgaW5kZXggPSBnbG9iYWxDYWNoZS5pbmRleE9mKGVudHJ5KTtcbiAgICAgIGlmIChpbmRleCAhPT0gLTEpIGdsb2JhbENhY2hlLnNwbGljZShpbmRleCwgMSk7XG4gICAgfSxcbiAgICBwcm9taXNlOiAvLyBFeGVjdXRlIHRoZSBwcm9taXNlXG4gICAgKGlzUHJvbWlzZShmbikgPyBmbiA6IGZuKC4uLmtleXMpIC8vIFdoZW4gaXQgcmVzb2x2ZXMsIHN0b3JlIGl0cyB2YWx1ZVxuICAgICkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICBlbnRyeS5yZXNwb25zZSA9IHJlc3BvbnNlOyAvLyBSZW1vdmUgdGhlIGVudHJ5IGluIHRpbWUgaWYgYSBsaWZlc3BhbiB3YXMgZ2l2ZW5cblxuICAgICAgaWYgKGNvbmZpZy5saWZlc3BhbiAmJiBjb25maWcubGlmZXNwYW4gPiAwKSB7XG4gICAgICAgIGVudHJ5LnRpbWVvdXQgPSBzZXRUaW1lb3V0KGVudHJ5LnJlbW92ZSwgY29uZmlnLmxpZmVzcGFuKTtcbiAgICAgIH1cbiAgICB9KSAvLyBTdG9yZSBjYXVnaHQgZXJyb3JzLCB0aGV5IHdpbGwgYmUgdGhyb3duIGluIHRoZSByZW5kZXItcGhhc2UgdG8gYnViYmxlIGludG8gYW4gZXJyb3ItYm91bmRcbiAgICAuY2F0Y2goZXJyb3IgPT4gZW50cnkuZXJyb3IgPSBlcnJvcilcbiAgfTsgLy8gUmVnaXN0ZXIgdGhlIGVudHJ5XG5cbiAgZ2xvYmFsQ2FjaGUucHVzaChlbnRyeSk7IC8vIEFuZCB0aHJvdyB0aGUgcHJvbWlzZSwgdGhpcyB5aWVsZHMgY29udHJvbCBiYWNrIHRvIFJlYWN0XG5cbiAgaWYgKCFwcmVsb2FkKSB0aHJvdyBlbnRyeS5wcm9taXNlO1xuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5jb25zdCBzdXNwZW5kID0gKGZuLCBrZXlzLCBjb25maWcpID0+IHF1ZXJ5KGZuLCBrZXlzLCBmYWxzZSwgY29uZmlnKTtcblxuY29uc3QgcHJlbG9hZCA9IChmbiwga2V5cywgY29uZmlnKSA9PiB2b2lkIHF1ZXJ5KGZuLCBrZXlzLCB0cnVlLCBjb25maWcpO1xuXG5jb25zdCBwZWVrID0ga2V5cyA9PiB7XG4gIHZhciBfZ2xvYmFsQ2FjaGUkZmluZDtcblxuICByZXR1cm4gKF9nbG9iYWxDYWNoZSRmaW5kID0gZ2xvYmFsQ2FjaGUuZmluZChlbnRyeSA9PiBzaGFsbG93RXF1YWxBcnJheXMoa2V5cywgZW50cnkua2V5cywgZW50cnkuZXF1YWwpKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9nbG9iYWxDYWNoZSRmaW5kLnJlc3BvbnNlO1xufTtcblxuY29uc3QgY2xlYXIgPSBrZXlzID0+IHtcbiAgaWYgKGtleXMgPT09IHVuZGVmaW5lZCB8fCBrZXlzLmxlbmd0aCA9PT0gMCkgZ2xvYmFsQ2FjaGUuc3BsaWNlKDAsIGdsb2JhbENhY2hlLmxlbmd0aCk7ZWxzZSB7XG4gICAgY29uc3QgZW50cnkgPSBnbG9iYWxDYWNoZS5maW5kKGVudHJ5ID0+IHNoYWxsb3dFcXVhbEFycmF5cyhrZXlzLCBlbnRyeS5rZXlzLCBlbnRyeS5lcXVhbCkpO1xuICAgIGlmIChlbnRyeSkgZW50cnkucmVtb3ZlKCk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IGNsZWFyLCBwZWVrLCBwcmVsb2FkLCBzdXNwZW5kIH07XG4iXSwibmFtZXMiOlsiaXNQcm9taXNlIiwicHJvbWlzZSIsInRoZW4iLCJnbG9iYWxDYWNoZSIsInNoYWxsb3dFcXVhbEFycmF5cyIsImFyckEiLCJhcnJCIiwiZXF1YWwiLCJhIiwiYiIsImxlbiIsImxlbmd0aCIsImkiLCJxdWVyeSIsImZuIiwia2V5cyIsInByZWxvYWQiLCJjb25maWciLCJlbnRyeSIsInVuZGVmaW5lZCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImVycm9yIiwibGlmZXNwYW4iLCJ0aW1lb3V0IiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsInJlbW92ZSIsInJlc3BvbnNlIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiY2F0Y2giLCJwdXNoIiwic3VzcGVuZCIsInBlZWsiLCJfZ2xvYmFsQ2FjaGUkZmluZCIsImZpbmQiLCJjbGVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/suspend-react/index.js\n");

/***/ })

};
;